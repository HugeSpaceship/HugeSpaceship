// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: resources.sql

package sqlc

import (
	"context"
)

const checkResources = `-- name: CheckResources :many
SELECT l.hash
from UNNEST($1::text[]) as l(hash)
         LEFT JOIN resources r on l.hash = r.hash
WHERE r.hash is null
`

func (q *Queries) CheckResources(ctx context.Context, resources []string) ([]interface{}, error) {
	rows, err := q.db.Query(ctx, checkResources, resources)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []interface{}
	for rows.Next() {
		var hash interface{}
		if err := rows.Scan(&hash); err != nil {
			return nil, err
		}
		items = append(items, hash)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
